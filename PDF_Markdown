# Zaawansowany Prompt do Konwersji PDF z JIRA Confluence na Markdown

## Instrukcja g≈Ç√≥wna

Przekonwertuj za≈ÇƒÖczony dokument PDF (eksport z JIRA Confluence) na czysty, dobrze sformatowany dokument Markdown, zachowujƒÖc ca≈ÇƒÖ strukturƒô, tre≈õƒá i formatowanie w mo≈ºliwie najdok≈Çadniejszy spos√≥b.

## Szczeg√≥≈Çowe wytyczne konwersji

### 1. Struktura dokumentu

- **Nag≈Ç√≥wki**: Zachowaj hierarchiƒô nag≈Ç√≥wk√≥w u≈ºywajƒÖc odpowiedniej liczby `#`:
  - Tytu≈Ç strony ‚Üí `# Tytu≈Ç`
  - Sekcje g≈Ç√≥wne ‚Üí `## Sekcja`
  - Podsekcje ‚Üí `### Podsekcja`
  - Itd. (do poziomu `######`)

- **Spis tre≈õci**: Je≈õli dokument zawiera spis tre≈õci, odtw√≥rz go jako listƒô z linkami:
  ```markdown
  ## Spis tre≈õci
  - [1. Wprowadzenie](#wprowadzenie)
  - [2. Architektura](#architektura)
    - [2.1 Komponenty](#komponenty)
  ```

### 2. Formatowanie tekstu

- **Pogrubienie**: `**tekst**` lub `__tekst__`
- **Kursywa**: `*tekst*` lub `_tekst_`
- **Przekre≈õlenie**: `~~tekst~~`
- **Kod inline**: `` `kod` ``
- **Cytaty**: U≈ºyj `>` dla blok√≥w cytat√≥w
- **Separatory**: U≈ºyj `---` lub `***` dla linii poziomych

### 3. Listy

- **Lista numerowana**:
  ```markdown
  1. Pierwszy element
  2. Drugi element
     1. Podelement
     2. Kolejny podelement
  ```

- **Lista wypunktowana**:
  ```markdown
  - Element
  - Kolejny element
    - Podelement
    - Kolejny podelement
  ```

- **Lista zada≈Ñ** (je≈õli wystƒôpuje):
  ```markdown
  - [x] Zadanie wykonane
  - [ ] Zadanie do wykonania
  ```

### 4. Tabele

Konwertuj tabele Confluence na format Markdown:
```markdown
| Kolumna 1 | Kolumna 2 | Kolumna 3 |
|-----------|-----------|-----------|
| Dane 1    | Dane 2    | Dane 3    |
| Dane 4    | Dane 5    | Dane 6    |
```

- Zachowaj wyr√≥wnanie kolumn je≈õli jest istotne
- Dla z≈Ço≈ºonych tabel z mergowanymi kom√≥rkami, u≈ºyj HTML:
  ```html
  <table>
    <tr>
      <td colspan="2">Scalona kom√≥rka</td>
    </tr>
  </table>
  ```

### 5. Bloki kodu

- **Oznacz jƒôzyk programowania** dla pod≈õwietlania sk≈Çadni:
  ```markdown
  ```java
  public class Example {
      public static void main(String[] args) {
          System.out.println("Hello World");
      }
  }
  ```
  ```

- **Zachowaj wciƒôcia i formatowanie** dok≈Çadnie jak w oryginale

### 6. Makra Confluence

Przekszta≈Çƒá makra Confluence na odpowiednie elementy Markdown:

- **Panel/Note/Info/Warning/Error**:
  ```markdown
  > **‚ÑπÔ∏è Informacja**
  > 
  > Tre≈õƒá panelu informacyjnego

  > **‚ö†Ô∏è Ostrze≈ºenie**
  > 
  > Tre≈õƒá ostrze≈ºenia

  > **‚ùå B≈ÇƒÖd**
  > 
  > Opis b≈Çƒôdu
  ```

- **Expand/Collapse** (rozwijane sekcje):
  ```markdown
  <details>
  <summary>Kliknij aby rozwinƒÖƒá</summary>

  Ukryta tre≈õƒá...

  </details>
  ```

### 7. Multimedia i za≈ÇƒÖczniki

- **Obrazy**:
  ```markdown
  ![Opis obrazu](nazwa-pliku.png)
  ```
  Dodaj notatkƒô je≈õli obraz nie jest dostƒôpny:
  ```markdown
  ![Diagram architektury](diagram.png)
  *[Obraz niedostƒôpny w PDF - oryginalnie: diagram-architektury.png]*
  ```

- **Diagramy** (np. z draw.io, PlantUML):
  - Je≈õli diagram jest jako obraz, traktuj jak obraz
  - Je≈õli widoczny jest kod ≈∫r√≥d≈Çowy diagramu, zachowaj go:
    ```markdown
    ```plantuml
    @startuml
    Alice -> Bob: Hello
    @enduml
    ```
    ```

### 8. Linki i odno≈õniki

- **Linki zewnƒôtrzne**: `[tekst linku](https://example.com)`
- **Linki wewnƒôtrzne** (do innych stron Confluence):
  ```markdown
  [Zobacz dokumentacjƒô API](link-do-confluence)
  *[Link wewnƒôtrzny Confluence]*
  ```
- **Kotwice/zak≈Çadki**: `[Przejd≈∫ do sekcji](#nazwa-sekcji)`

### 9. Metadane i informacje o stronie

Zachowaj metadane na poczƒÖtku dokumentu:
```markdown
---
title: "Tytu≈Ç dokumentu"
space: "Nazwa przestrzeni"
parent: "Strona nadrzƒôdna"
created: "2024-01-15"
modified: "2024-03-20"
version: "1.2"
labels: ["label1", "label2", "label3"]
---
```

### 10. Elementy specjalne

- **Status/Badge**:
  ```markdown
  ![Status](https://img.shields.io/badge/Status-Aktywny-green)
  ```

- **U≈ºytkownicy/Mentions**: `@u≈ºytkownik` lub `**@Jan Kowalski**`

- **Emotikony**: Zachowaj jako emoji Unicode lub opisz: `:smile:` ‚Üí üòä

- **Makra JIRA** (zadania, filtry):
  ```markdown
  **JIRA Issues:**
  - [PROJ-123](https://jira.example.com/browse/PROJ-123) - Opis zadania
  - [PROJ-124](https://jira.example.com/browse/PROJ-124) - Inny opis
  ```

### 11. Komentarze i adnotacje

Je≈õli PDF zawiera komentarze lub adnotacje:
```markdown
<!-- KOMENTARZ: Tre≈õƒá komentarza od @autor -->
```

### 12. Formatowanie specyficzne

- **Dwukolumnowy uk≈Çad**: Opisz w komentarzu i przedstaw tre≈õƒá sekwencyjnie
- **Ramki i obramowania**: U≈ºyj cytat√≥w lub tabel HTML
- **Kolory tekstu**: Zachowaj informacjƒô w komentarzu:
  ```markdown
  <!-- Oryginalnie tekst w kolorze czerwonym -->
  **Wa≈ºna informacja**
  ```

## Instrukcje ko≈Ñcowe

1. **Zachowaj kolejno≈õƒá** element√≥w dok≈Çadnie jak w PDF
2. **Nie pomijaj** ≈ºadnej tre≈õci, nawet je≈õli wydaje siƒô ma≈Ço istotna
3. **Dodaj komentarze** gdy konwersja 1:1 nie jest mo≈ºliwa
4. **Waliduj** linki wewnƒôtrzne i zewnƒôtrzne
5. **Zachowaj numeracjƒô** stron je≈õli jest istotna: `<!-- Strona 5 -->`
6. Je≈õli nie jeste≈õ pewien jak przekonwertowaƒá element, **opisz go** w komentarzu i zachowaj tre≈õƒá

## Przyk≈Çad wyniku

```markdown
# Dokumentacja Systemu XYZ

---
title: "Dokumentacja Systemu XYZ"
space: "TECH"
created: "2024-01-15"
version: "2.1"
---

## Spis tre≈õci
- [1. Wprowadzenie](#wprowadzenie)
- [2. Architektura](#architektura)

## 1. Wprowadzenie

System XYZ jest **nowoczesnƒÖ platformƒÖ** s≈Çu≈ºƒÖcƒÖ do...

> **‚ÑπÔ∏è Informacja**
> 
> Ten dokument jest przeznaczony dla deweloper√≥w

## 2. Architektura

### 2.1 Komponenty g≈Ç√≥wne

| Komponent | Technologia | Wersja |
|-----------|------------|--------|
| Backend   | Java       | 17     |
| Frontend  | React      | 18.2   |

```java
@RestController
public class MainController {
    // kod...
}
```

![Diagram architektury](architecture-diagram.png)
*[Obraz niedostƒôpny w PDF]*
```

Przetw√≥rz ca≈Çy dokument zachowujƒÖc powy≈ºsze wytyczne.
